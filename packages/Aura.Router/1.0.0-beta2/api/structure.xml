<?xml version="1.0"?>
<project version="0.17.2" title="">
  <file path="Aura/Router/Exception.php" hash="7298603471092fb7b04720ccd8608e2d" package="Default">
    <class final="false" abstract="false" line="18" namespace="Aura\Router" package="Aura\Router">
      <name>Exception</name>
      <extends>\Exception</extends>
      <full_name>\Aura\Router\Exception</full_name>
      <docblock>
        <description>Package-specific exception.</description>
        <long-description/>
        <tag line="11" name="package" description="Aura.Router"/>
      </docblock>
    </class>
  </file>
  <file path="Aura/Router/Map.php" hash="8ab32b8d4c577223e450d59ac6e3d896" package="Default">
    <parse_markers>
      <notice line="278">Argument $route is missing from the function Docblock</notice>
    </parse_markers>
    <class final="false" abstract="false" line="18" namespace="Aura\Router" package="Aura\Router">
      <name>Map</name>
      <extends/>
      <full_name>\Aura\Router\Map</full_name>
      <docblock>
        <description>A collection point for URI routes.</description>
        <long-description/>
        <tag line="11" name="package" description="Aura.Router"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="27" package="Default">
        <name>$attach_common</name>
        <default>null</default>
        <docblock>
          <description>Currently processing this attached common route information.</description>
          <long-description/>
          <tag line="20" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="36" package="Default">
        <name>$attach_routes</name>
        <default>null</default>
        <docblock>
          <description>Currently processing these attached routes.</description>
          <long-description/>
          <tag line="29" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="45" package="Default">
        <name>$definitions</name>
        <default>[]</default>
        <docblock>
          <description>Route definitions; these will be converted into objects.</description>
          <long-description/>
          <tag line="38" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="54" package="Default">
        <name>$route_factory</name>
        <default/>
        <docblock>
          <description>A RouteFactory for creating route objects.</description>
          <long-description/>
          <tag line="47" name="var" description="" type="\Aura\Router\RouteFactory">
            <type by_reference="false">\Aura\Router\RouteFactory</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="63" package="Default">
        <name>$routes</name>
        <default>[]</default>
        <docblock>
          <description>Route objects created from the definitons.</description>
          <long-description/>
          <tag line="56" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="72" package="Default">
        <name>$log</name>
        <default>[]</default>
        <docblock>
          <description>Logging information about which routes were attempted to match.</description>
          <long-description/>
          <tag line="65" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="84" package="Default">
        <name>__construct</name>
        <docblock>
          <description>Constructor.</description>
          <long-description/>
          <tag line="74" name="param" description="A factory for creating route objects." type="\Aura\Router\RouteFactory" variable="$route_factory">
            <type by_reference="false">\Aura\Router\RouteFactory</type>
          </tag>
          <tag line="74" name="param" description="A series of route definitions to be attached to the router." type="array" variable="$attach">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="85">
          <name>$route_factory</name>
          <default/>
          <type>RouteFactory</type>
        </argument>
        <argument line="86">
          <name>$attach</name>
          <default>null</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="108" package="Default">
        <name>add</name>
        <docblock>
          <description>Adds a single route definition to the stack.</description>
          <long-description/>
          <tag line="94" name="param" description="The route name for `generate()` lookups." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="94" name="param" description="The route path." type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="94" name="param" description="The rest of the route definition, with keys for `params`, `values`, etc." type="array" variable="$spec">
            <type by_reference="false">array</type>
          </tag>
          <tag line="94" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="108">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="108">
          <name>$path</name>
          <default/>
          <type/>
        </argument>
        <argument line="108">
          <name>$spec</name>
          <default>null</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="138" package="Default">
        <name>attach</name>
        <docblock>
          <description>Attaches several routes at once to a specific path prefix.</description>
          <long-description/>
          <tag line="125" name="param" description="The path that the routes should be attached to." type="string" variable="$path_prefix">
            <type by_reference="false">string</type>
          </tag>
          <tag line="125" name="param" description="An array of common route information, with an additional `routes` key to define the routes themselves." type="array" variable="$spec">
            <type by_reference="false">array</type>
          </tag>
          <tag line="125" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="138">
          <name>$path_prefix</name>
          <default/>
          <type/>
        </argument>
        <argument line="138">
          <name>$spec</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="165" package="Default">
        <name>match</name>
        <docblock>
          <description>Gets a route that matches a given path and other server conditions.</description>
          <long-description/>
          <tag line="153" name="param" description="The path to match against." type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="153" name="param" description="An array copy of $_SERVER." type="array" variable="$server">
            <type by_reference="false">array</type>
          </tag>
          <tag line="153" name="return" description="Returns a Route object when it finds a match, or boolean false if there is no match." type="\Aura\Router\Route|false">
            <type by_reference="false">\Aura\Router\Route</type>
            <type by_reference="false">false</type>
          </tag>
        </docblock>
        <argument line="165">
          <name>$path</name>
          <default/>
          <type/>
        </argument>
        <argument line="165">
          <name>$server</name>
          <default>null</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="205" package="Default">
        <name>generate</name>
        <docblock>
          <description>Looks up a route by name, and interpolates data into it to return
a URI path.</description>
          <long-description/>
          <tag line="191" name="param" description="The route name to look up." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="191" name="param" description="The data to inpterolate into the URI; data keys map to param tokens in the path." type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="191" name="return" description="A URI path string if the route name is found, or boolean false if not." type="string|false">
            <type by_reference="false">string</type>
            <type by_reference="false">false</type>
          </tag>
        </docblock>
        <argument line="205">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="205">
          <name>$data</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="234" package="Default">
        <name>setRoutes</name>
        <docblock>
          <description>Reset the map to use an array of Route objects.</description>
          <long-description/>
          <tag line="224" name="param" description="Use this array of route objects, likely generated from `getRoutes()`." type="array" variable="$routes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="224" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="234">
          <name>$routes</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="250" package="Default">
        <name>getRoutes</name>
        <docblock>
          <description>Get the array of Route objects in this map, likely for caching and
re-setting via `setRoutes()`.</description>
          <long-description/>
          <tag line="242" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="266" package="Default">
        <name>getLog</name>
        <docblock>
          <description>Get the log of attempted route matches.</description>
          <long-description/>
          <tag line="259" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="278" package="Default">
        <name>logRoute</name>
        <docblock>
          <description>Add a route to the log of attempted matches.</description>
          <long-description/>
          <tag line="271" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="278">
          <name>$route</name>
          <default/>
          <type>Route</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="292" package="Default">
        <name>createNextRoute</name>
        <docblock>
          <description>Gets the next Route object in the stack, converting definitions to
Route objects as needed.</description>
          <long-description/>
          <tag line="283" name="return" description="A Route object, or boolean false at the end of the stack." type="\Aura\Router\Route|false">
            <type by_reference="false">\Aura\Router\Route</type>
            <type by_reference="false">false</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="327" package="Default">
        <name>getNextDefinition</name>
        <docblock>
          <description>Gets the next route definition from the stack.</description>
          <long-description/>
          <tag line="320" name="return" description="A route definition." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="359" package="Default">
        <name>getNextAttach</name>
        <docblock>
          <description>Gets the next attached route definition.</description>
          <long-description/>
          <tag line="352" name="return" description="A route definition." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Aura/Router/Route.php" hash="017489bd527bf3bc23c3d211a5476416" package="Default">
    <class final="false" abstract="false" line="21" namespace="Aura\Router" package="Aura\Router">
      <name>Route</name>
      <extends/>
      <full_name>\Aura\Router\Route</full_name>
      <docblock>
        <description>Represents an individual route with a name, path, params, values, etc.</description>
        <long-description>&lt;p&gt;In general, you should never need to instantiate a Route directly. Use the
RouteFactory instead, or the Map.&lt;/p&gt;</long-description>
        <tag line="11" name="package" description="Aura.Router"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="30" package="Default">
        <name>$name</name>
        <default/>
        <docblock>
          <description>The name for this Route.</description>
          <long-description/>
          <tag line="23" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="39" package="Default">
        <name>$path</name>
        <default/>
        <docblock>
          <description>The path for this Route with param tokens.</description>
          <long-description/>
          <tag line="32" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="48" package="Default">
        <name>$params</name>
        <default>[]</default>
        <docblock>
          <description>A map of param tokens to their regex subpatterns.</description>
          <long-description/>
          <tag line="41" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="59" package="Default">
        <name>$values</name>
        <default>[]</default>
        <docblock>
          <description>A map of param tokens to their default values; if this Route is
matched, these will retain the corresponding values from the param
tokens in the matching path.</description>
          <long-description/>
          <tag line="50" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="69" package="Default">
        <name>$method</name>
        <default>[]</default>
        <docblock>
          <description>The `REQUEST_METHOD` value must match one of the methods in this array;
method; e.g., `'GET'` or `['POST', 'DELETE']`.</description>
          <long-description/>
          <tag line="61" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="80" package="Default">
        <name>$secure</name>
        <default>null</default>
        <docblock>
          <description>When true, the `HTTPS` value must be `on`, or the `SERVER_PORT` must be
443.  When false, neither of those values may be present.  When null,
it is ignored.</description>
          <long-description/>
          <tag line="71" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="96" package="Default">
        <name>$is_match</name>
        <default/>
        <docblock>
          <description>A callable to provide custom matching logic against the
server values and matched params from this Route. The signature must be
`function(array $server, \ArrayObject $matches)` and must return a
boolean: true to accept this Route match, or false to deny the match.</description>
          <long-description>&lt;p&gt;Note that this allows a wide range of manipulations, and further allows
the developer to modify the matched params as needed.&lt;/p&gt;</long-description>
          <tag line="82" name="var" description="" type="\Aura\Router\callable">
            <type by_reference="false">\Aura\Router\callable</type>
          </tag>
          <tag line="82" name="see" description="\Aura\Router\isMatch()" refers="\Aura\Router\isMatch()"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="111" package="Default">
        <name>$generate</name>
        <default/>
        <docblock>
          <description>A callable to modify path-generation values. The signature
must be `function($route, array $data)`; its return value is an array
of data to be used in the path. The `$route` is this Route object, and
`$data` is the set of key-value pairs to be interpolated into the path
as provided by the caller.</description>
          <long-description/>
          <tag line="98" name="var" description="" type="\Aura\Router\callable">
            <type by_reference="false">\Aura\Router\callable</type>
          </tag>
          <tag line="98" name="see" description="\Aura\Router\generate()" refers="\Aura\Router\generate()"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="121" package="Default">
        <name>$routable</name>
        <default/>
        <docblock>
          <description>If routable, this route should be used in matching.  If not, it should
be used only to generate a path.</description>
          <long-description/>
          <tag line="113" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="130" package="Default">
        <name>$name_prefix</name>
        <default/>
        <docblock>
          <description>A prefix for the Route name, generally from attached route groups.</description>
          <long-description/>
          <tag line="123" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="139" package="Default">
        <name>$path_prefix</name>
        <default/>
        <docblock>
          <description>A prefix for the Route path, generally from attached route groups.</description>
          <long-description/>
          <tag line="132" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="149" package="Default">
        <name>$regex</name>
        <default/>
        <docblock>
          <description>The $path property converted to a regular expression, using the $params
subpatterns.</description>
          <long-description/>
          <tag line="141" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="160" package="Default">
        <name>$matches</name>
        <default/>
        <docblock>
          <description>All param matches found in the path during the `isMatch()` process.</description>
          <long-description/>
          <tag line="151" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="151" name="see" description="\Aura\Router\isMatch()" refers="\Aura\Router\isMatch()"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="169" package="Default">
        <name>$debug</name>
        <default/>
        <docblock>
          <description>Retain debugging information about why the route did not match.</description>
          <long-description/>
          <tag line="162" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="202" package="Default">
        <name>__construct</name>
        <docblock>
          <description>Constructor.</description>
          <long-description/>
          <tag line="171" name="param" description="The name for this Route." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="171" name="param" description="The path for this Route with param token placeholders." type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="171" name="param" description="Map of param tokens to regex subpatterns." type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="171" name="param" description="Default values for params." type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="171" name="param" description="The server REQUUEST_METHOD must be one of these values." type="string|array" variable="$method">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="171" name="param" description="If true, the server must indicate an HTTPS request." type="bool" variable="$secure">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="171" name="param" description="If true, this Route can be matched; if not, it can be used only to generate a path." type="bool" variable="$routable">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="171" name="param" description="A custom callable to evaluate the route." type="\Aura\Router\callable" variable="$is_match">
            <type by_reference="false">\Aura\Router\callable</type>
          </tag>
          <tag line="171" name="param" description="A custom callable to generate a path." type="\Aura\Router\callable" variable="$generate">
            <type by_reference="false">\Aura\Router\callable</type>
          </tag>
          <tag line="171" name="param" description="A prefix for the name." type="string" variable="$name_prefix">
            <type by_reference="false">string</type>
          </tag>
          <tag line="171" name="param" description="A prefix for the path." type="string" variable="$path_prefix">
            <type by_reference="false">string</type>
          </tag>
          <tag line="171" name="return" description="" type="\Aura\Router\Route">
            <type by_reference="false">\Aura\Router\Route</type>
          </tag>
        </docblock>
        <argument line="203">
          <name>$name</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="204">
          <name>$path</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="205">
          <name>$params</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="206">
          <name>$values</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="207">
          <name>$method</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="208">
          <name>$secure</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="209">
          <name>$routable</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="210">
          <name>$is_match</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="211">
          <name>$generate</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="212">
          <name>$name_prefix</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="213">
          <name>$path_prefix</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="253" package="Default">
        <name>__get</name>
        <docblock>
          <description>Magic read-only for all properties.</description>
          <long-description/>
          <tag line="244" name="param" description="The property to read from." type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="244" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="253">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="271" package="Default">
        <name>isMatch</name>
        <docblock>
          <description>Checks if a given path and server values are a match for this
Route.</description>
          <long-description/>
          <tag line="258" name="param" description="The path to check against this Route." type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="258" name="param" description="A copy of $_SERVER so that this Route can check against the server values." type="array" variable="$server">
            <type by_reference="false">array</type>
          </tag>
          <tag line="258" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="271">
          <name>$path</name>
          <default/>
          <type/>
        </argument>
        <argument line="271">
          <name>$server</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="310" package="Default">
        <name>generate</name>
        <docblock>
          <description>Gets the path for this Route with data replacements for param tokens.</description>
          <long-description/>
          <tag line="298" name="param" description="An array of key-value pairs to interpolate into the param tokens in the path for this Route. Keys that do not map to params are discarded; param tokens that have no mapped key are left in place." type="mixed" variable="$data">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="298" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="310">
          <name>$data</name>
          <default>null</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="336" package="Default">
        <name>setRegex</name>
        <docblock>
          <description>Sets the regular expression for this Route based on its params.</description>
          <long-description/>
          <tag line="329" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="383" package="Default">
        <name>isRegexMatch</name>
        <docblock>
          <description>Checks that the path matches the Route regex.</description>
          <long-description/>
          <tag line="374" name="param" description="The path to match against." type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="374" name="return" description="True on a match, false if not." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="383">
          <name>$path</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="401" package="Default">
        <name>isMethodMatch</name>
        <docblock>
          <description>Checks that the Route `$method` matches the corresponding server value.</description>
          <long-description/>
          <tag line="392" name="param" description="A copy of $_SERVER." type="array" variable="$server">
            <type by_reference="false">array</type>
          </tag>
          <tag line="392" name="return" description="True on a match, false if not." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="401">
          <name>$server</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="425" package="Default">
        <name>isSecureMatch</name>
        <docblock>
          <description>Checks that the Route `$secure` matches the corresponding server values.</description>
          <long-description/>
          <tag line="416" name="param" description="A copy of $_SERVER." type="array" variable="$server">
            <type by_reference="false">array</type>
          </tag>
          <tag line="416" name="return" description="True on a match, false if not." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="425">
          <name>$server</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="455" package="Default">
        <name>isCustomMatch</name>
        <docblock>
          <description>Checks that the custom Route `$is_match` callable returns true, given
the server values.</description>
          <long-description/>
          <tag line="445" name="param" description="A copy of $_SERVER." type="array" variable="$server">
            <type by_reference="false">array</type>
          </tag>
          <tag line="445" name="return" description="True on a match, false if not." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="455">
          <name>$server</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Aura/Router/RouteFactory.php" hash="656f0ee092dd11a8722a197e5e412380" package="Default">
    <class final="false" abstract="false" line="18" namespace="Aura\Router" package="Aura\Router">
      <name>RouteFactory</name>
      <extends/>
      <full_name>\Aura\Router\RouteFactory</full_name>
      <docblock>
        <description>A factory to create Route objects.</description>
        <long-description/>
        <tag line="11" name="package" description="Aura.Router"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="27" package="Default">
        <name>$params</name>
        <default>[
        'name'        =&gt; null</default>
        <docblock>
          <description>An array of default parameters for Route objects.</description>
          <long-description/>
          <tag line="20" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="51" package="Default">
        <name>newInstance</name>
        <docblock>
          <description>Returns a new Route instance.</description>
          <long-description/>
          <tag line="41" name="param" description="An array of key-value pairs corresponding to the Route parameters." type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="41" name="return" description="" type="\Aura\Router\Route">
            <type by_reference="false">\Aura\Router\Route</type>
          </tag>
        </docblock>
        <argument line="51">
          <name>$params</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
    </class>
  </file>
  <package name="Aura">
    <package name="Router"/>
  </package>
  <package name="Default"/>
  <namespace name="Aura">
    <namespace name="Router"/>
  </namespace>
  <marker>todo</marker>
  <marker>fixme</marker>
</project>
