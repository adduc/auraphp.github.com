<?xml version="1.0"?>
<project version="0.17.2" title="">
  <file path="Aura/Web/AbstractPage.php" hash="97d9eb2d2c36cab2bf5a7b6fd45456f8" package="Default">
    <class final="false" abstract="true" line="18" namespace="Aura\Web" package="Aura\Web">
      <name>AbstractPage</name>
      <extends/>
      <full_name>\Aura\Web\AbstractPage</full_name>
      <docblock>
        <description>A page controller.</description>
        <long-description/>
        <tag line="11" name="package" description="Aura.Web"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="27" package="Default">
        <name>$action</name>
        <default/>
        <docblock>
          <description>The action to perform, typically discovered from the params.</description>
          <long-description/>
          <tag line="20" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="36" package="Default">
        <name>$context</name>
        <default/>
        <docblock>
          <description>The context of the request environment.</description>
          <long-description/>
          <tag line="29" name="var" description="" type="\Aura\Web\Context">
            <type by_reference="false">\Aura\Web\Context</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="45" package="Default">
        <name>$data</name>
        <default/>
        <docblock>
          <description>Collection point for data, typically for rendering the page.</description>
          <long-description/>
          <tag line="38" name="var" description="" type="\Aura\Web\StdClass">
            <type by_reference="false">\Aura\Web\StdClass</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="54" package="Default">
        <name>$format</name>
        <default/>
        <docblock>
          <description>The page format to render, typically discovered from the params.</description>
          <long-description/>
          <tag line="47" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="63" package="Default">
        <name>$params</name>
        <default/>
        <docblock>
          <description>Path-info parameters, typically from the route.</description>
          <long-description/>
          <tag line="56" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="72" package="Default">
        <name>$response</name>
        <default/>
        <docblock>
          <description>A data transfer object for the eventual HTTP response.</description>
          <long-description/>
          <tag line="65" name="var" description="" type="\Aura\Web\Response">
            <type by_reference="false">\Aura\Web\Response</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="85" package="Default">
        <name>__construct</name>
        <docblock>
          <description>Constructor.</description>
          <long-description/>
          <tag line="74" name="param" description="The request environment." type="\Aura\Web\Context" variable="$context">
            <type by_reference="false">\Aura\Web\Context</type>
          </tag>
          <tag line="74" name="param" description="A response transfer object." type="\Aura\Web\Response" variable="$response">
            <type by_reference="false">\Aura\Web\Response</type>
          </tag>
          <tag line="74" name="param" description="The path-info parameters." type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="86">
          <name>$context</name>
          <default/>
          <type>Context</type>
        </argument>
        <argument line="87">
          <name>$response</name>
          <default/>
          <type>Response</type>
        </argument>
        <argument line="88">
          <name>$params</name>
          <default>[]</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="114" package="Default">
        <name>getAction</name>
        <docblock>
          <description>Returns the action, typically discovered from the params.</description>
          <long-description/>
          <tag line="107" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="126" package="Default">
        <name>getContext</name>
        <docblock>
          <description>Returns the Context object.</description>
          <long-description/>
          <tag line="119" name="return" description="" type="\Aura\Web\Context">
            <type by_reference="false">\Aura\Web\Context</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="138" package="Default">
        <name>getData</name>
        <docblock>
          <description>Returns the data collection object.</description>
          <long-description/>
          <tag line="131" name="return" description="" type="\Aura\Web\StdClass">
            <type by_reference="false">\Aura\Web\StdClass</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="150" package="Default">
        <name>getFormat</name>
        <docblock>
          <description>Returns the page format, typically discovered from the params.</description>
          <long-description/>
          <tag line="143" name="return" description="" type="\Aura\Web\StdClass">
            <type by_reference="false">\Aura\Web\StdClass</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="162" package="Default">
        <name>getParams</name>
        <docblock>
          <description>Returns the params.</description>
          <long-description/>
          <tag line="155" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="174" package="Default">
        <name>getResponse</name>
        <docblock>
          <description>Returns the Response object.</description>
          <long-description/>
          <tag line="167" name="return" description="" type="\Aura\Web\Response">
            <type by_reference="false">\Aura\Web\Response</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="207" package="Default">
        <name>exec</name>
        <docblock>
          <description>Executes the action and all hooks:</description>
          <long-description>&lt;ul&gt;
&lt;li&gt;&lt;p&gt;calls &lt;code&gt;preExec()&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;calls &lt;code&gt;preAction()&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;calls &lt;code&gt;action()&lt;/code&gt; to find and invoke the action method&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;calls &lt;code&gt;postAction()&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;calls &lt;code&gt;preRender()&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;calls &lt;code&gt;render()&lt;/code&gt; to generate a presentation (does nothing by default)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;calls &lt;code&gt;postRender()&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;calls &lt;code&gt;postExec()&lt;/code&gt; and then returns the Response transfer object&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;</long-description>
          <tag line="184" name="return" description="" type="\Aura\Web\Response">
            <type by_reference="false">\Aura\Web\Response</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="234" package="Default">
        <name>preExec</name>
        <docblock>
          <description>Runs at the beginning of `exec()` before `preAction()`.</description>
          <long-description/>
          <tag line="227" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="245" package="Default">
        <name>preAction</name>
        <docblock>
          <description>Runs after `preExec()` and before `action()`.</description>
          <long-description/>
          <tag line="238" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="256" package="Default">
        <name>action</name>
        <docblock>
          <description>Determines the action method, then invokes it.</description>
          <long-description/>
          <tag line="249" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="274" package="Default">
        <name>invokeMethod</name>
        <docblock>
          <description>Invokes a method by name, matching method params to `$this-&gt;params`.</description>
          <long-description/>
          <tag line="265" name="param" description="The method name to execute, typcially an action." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="265" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="274">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="297" package="Default">
        <name>postAction</name>
        <docblock>
          <description>Runs after `action()` and before `preRender()`.</description>
          <long-description/>
          <tag line="290" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="308" package="Default">
        <name>preRender</name>
        <docblock>
          <description>Runs after `postAction()` and before `render()`.</description>
          <long-description/>
          <tag line="301" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="319" package="Default">
        <name>render</name>
        <docblock>
          <description>Renders the page into the response object.</description>
          <long-description/>
          <tag line="312" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="330" package="Default">
        <name>postRender</name>
        <docblock>
          <description>Runs after `render()` and before `postExec()`.</description>
          <long-description/>
          <tag line="323" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="341" package="Default">
        <name>postExec</name>
        <docblock>
          <description>Runs at the end of `exec()` after `postRender()`.</description>
          <long-description/>
          <tag line="334" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Aura/Web/Context.php" hash="8603ba9b60112ff030f1172ffa49c2c3" package="Default">
    <parse_markers>
      <notice line="208">Argument $globals is missing from the function Docblock</notice>
      <notice line="208">Argument $agents is missing from the function Docblock</notice>
      <notice line="587">Name of argument $accept does not match with function Docblock</notice>
    </parse_markers>
    <class final="false" abstract="false" line="18" namespace="Aura\Web" package="Aura\Web">
      <name>Context</name>
      <extends/>
      <full_name>\Aura\Web\Context</full_name>
      <docblock>
        <description>Collection point for information about the web environment.</description>
        <long-description/>
        <tag line="11" name="package" description="Aura.Web"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="27" package="Default">
        <name>$get</name>
        <default/>
        <docblock>
          <description>Imported $_GET values.</description>
          <long-description/>
          <tag line="20" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="36" package="Default">
        <name>$post</name>
        <default/>
        <docblock>
          <description>Imported $_POST values.</description>
          <long-description/>
          <tag line="29" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="45" package="Default">
        <name>$server</name>
        <default/>
        <docblock>
          <description>Imported $_SERVER values.</description>
          <long-description/>
          <tag line="38" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="54" package="Default">
        <name>$cookie</name>
        <default/>
        <docblock>
          <description>Imported $_COOKIE values.</description>
          <long-description/>
          <tag line="47" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="63" package="Default">
        <name>$env</name>
        <default/>
        <docblock>
          <description>Imported $_ENV values.</description>
          <long-description/>
          <tag line="56" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="72" package="Default">
        <name>$files</name>
        <default/>
        <docblock>
          <description>Imported $_FILES values.</description>
          <long-description/>
          <tag line="65" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="84" package="Default">
        <name>$header</name>
        <default/>
        <docblock>
          <description>Imported $_SERVER['HTTP_*'] values.</description>
          <long-description>&lt;p&gt;Header keys are normalized and lower-cased; keys and values are
filtered for control characters.&lt;/p&gt;</long-description>
          <tag line="74" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="94" package="Default">
        <name>$accept</name>
        <default/>
        <docblock>
          <description>The parsed http[accept*] headers with each header sorted
by the quality factor</description>
          <long-description/>
          <tag line="86" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="103" package="Default">
        <name>$input</name>
        <default>false</default>
        <docblock>
          <description>The value of `php://input`.</description>
          <long-description/>
          <tag line="96" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="117" package="Default">
        <name>$agents</name>
        <default>[
        'mobile' =&gt; [
            'Android'</default>
        <docblock>
          <description>An array of http user-agents used in matching
mobile browsers and crawlers</description>
          <long-description/>
          <tag line="105" name="see" description="\Aura\Web\isMobile()" refers="\Aura\Web\isMobile()"/>
          <tag line="105" name="see" description="\Aura\Web\isCrawler()" refers="\Aura\Web\isCrawler()"/>
          <tag line="105" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="191" package="Default">
        <name>$is_mobile</name>
        <default/>
        <docblock>
          <description>A property to hold previous calls to isMobile()
so you don't have to loop through $this-&gt;agents['mobile'] again.</description>
          <long-description/>
          <tag line="183" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="201" package="Default">
        <name>$is_crawler</name>
        <default/>
        <docblock>
          <description>A property to hold previous calls to isCrawler()
so you don't have to loop through $this-&gt;agents['crawler'] again.</description>
          <long-description/>
          <tag line="193" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="208" package="Default">
        <name>__construct</name>
        <docblock>
          <description>Constructor.</description>
          <long-description/>
        </docblock>
        <argument line="208">
          <name>$globals</name>
          <default/>
          <type>array</type>
        </argument>
        <argument line="208">
          <name>$agents</name>
          <default>[]</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="236" package="Default">
        <name>__get</name>
        <docblock>
          <description>Magic get to make properties read-only.</description>
          <long-description/>
          <tag line="227" name="param" description="The property to read." type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="227" name="return" description="The property value." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="236">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="254" package="Default">
        <name>isGet</name>
        <docblock>
          <description>Is this a GET request?</description>
          <long-description/>
          <tag line="247" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="266" package="Default">
        <name>isPost</name>
        <docblock>
          <description>Is this a POST request?</description>
          <long-description/>
          <tag line="259" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="278" package="Default">
        <name>isPut</name>
        <docblock>
          <description>Is this a PUT request?</description>
          <long-description/>
          <tag line="271" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="290" package="Default">
        <name>isDelete</name>
        <docblock>
          <description>Is this a DELETE request?</description>
          <long-description/>
          <tag line="283" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="302" package="Default">
        <name>isHead</name>
        <docblock>
          <description>Is this a HEAD request?</description>
          <long-description/>
          <tag line="295" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="314" package="Default">
        <name>isOptions</name>
        <docblock>
          <description>Is this an OPTIONS request?</description>
          <long-description/>
          <tag line="307" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="326" package="Default">
        <name>isXhr</name>
        <docblock>
          <description>Is this an XmlHttpRequest?</description>
          <long-description/>
          <tag line="319" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="338" package="Default">
        <name>isMobile</name>
        <docblock>
          <description>Is this a mobile device?</description>
          <long-description/>
          <tag line="331" name="return" description="False if not mobile, or the matched pattern if it is." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="373" package="Default">
        <name>isCrawler</name>
        <docblock>
          <description>Is this a crawler/bot device?</description>
          <long-description/>
          <tag line="366" name="return" description="False if not a crawler, or the matched pattern if it is." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="408" package="Default">
        <name>isSsl</name>
        <docblock>
          <description>Is this an SSL request?</description>
          <long-description/>
          <tag line="401" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="427" package="Default">
        <name>getQuery</name>
        <docblock>
          <description>Retrieves an **unfiltered** value by key from the `$get` property,
or an alternate default value if that key does not exist.</description>
          <long-description/>
          <tag line="414" name="param" description="The $get key to retrieve the value of." type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="414" name="param" description="The value to return if the key does not exist." type="string" variable="$alt">
            <type by_reference="false">string</type>
          </tag>
          <tag line="414" name="return" description="The value of $get[$key], or the alternate default value." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="427">
          <name>$key</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="427">
          <name>$alt</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="445" package="Default">
        <name>getPost</name>
        <docblock>
          <description>Retrieves an **unfiltered** value by key from the `$post` property,
or an alternate default value if that key does not exist.</description>
          <long-description/>
          <tag line="432" name="param" description="The $post key to retrieve the value of." type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="432" name="param" description="The value to return if the key does not exist." type="string" variable="$alt">
            <type by_reference="false">string</type>
          </tag>
          <tag line="432" name="return" description="The value of $post[$key], or the alternate default value." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="445">
          <name>$key</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="445">
          <name>$alt</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="463" package="Default">
        <name>getFiles</name>
        <docblock>
          <description>Retrieves an **unfiltered** value by key from the `$files` property,
or an alternate default value if that key does not exist.</description>
          <long-description/>
          <tag line="450" name="param" description="The $files key to retrieve the value of." type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="450" name="param" description="The value to return if the key does not exist." type="string" variable="$alt">
            <type by_reference="false">string</type>
          </tag>
          <tag line="450" name="return" description="The value of $files[$key], or the alternate default value." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="463">
          <name>$key</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="463">
          <name>$alt</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="481" package="Default">
        <name>getCookie</name>
        <docblock>
          <description>Retrieves an **unfiltered** value by key from the `$cookie` property,
or an alternate default value if that key does not exist.</description>
          <long-description/>
          <tag line="468" name="param" description="The $cookie key to retrieve the value of." type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="468" name="param" description="The value to return if the key does not exist." type="string" variable="$alt">
            <type by_reference="false">string</type>
          </tag>
          <tag line="468" name="param" description="The value of $cookie[$key], or the alternate default value." type="bool" variable="">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="481">
          <name>$key</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="481">
          <name>$alt</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="499" package="Default">
        <name>getEnv</name>
        <docblock>
          <description>Retrieves an **unfiltered** value by key from the `$env` property,
or an alternate default value if that key does not exist.</description>
          <long-description/>
          <tag line="486" name="param" description="The $env key to retrieve the value of." type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="486" name="param" description="The value to return if the key does not exist." type="string" variable="$alt">
            <type by_reference="false">string</type>
          </tag>
          <tag line="486" name="return" description="The value of $env[$key], or the alternate default value." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="499">
          <name>$key</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="499">
          <name>$alt</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="517" package="Default">
        <name>getServer</name>
        <docblock>
          <description>Retrieves an **unfiltered** value by key from the `$server` property,
or an alternate default value if that key does not exist.</description>
          <long-description/>
          <tag line="504" name="param" description="The $server key to retrieve the value of." type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="504" name="param" description="The value to return if the key does not exist." type="string" variable="$alt">
            <type by_reference="false">string</type>
          </tag>
          <tag line="504" name="return" description="The value of $server[$key], or the alternate default value." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="517">
          <name>$key</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="517">
          <name>$alt</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="529" package="Default">
        <name>getInput</name>
        <docblock>
          <description>Retrieves the unfiltered `$input` property.</description>
          <long-description/>
          <tag line="522" name="return" description="The value of $input." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="550" package="Default">
        <name>getJsonInput</name>
        <docblock>
          <description>Retrieves the `$input` property after applying `json_decode()`.</description>
          <long-description/>
          <tag line="534" name="param" description="When true, returned objects will be converted into associative arrays." type="bool" variable="$assoc">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="534" name="param" description="Recursion depth." type="int" variable="$depth">
            <type by_reference="false">int</type>
          </tag>
          <tag line="534" name="param" description="Bitmask of JSON decode options. Currently only JSON_BIGINT_AS_STRING is supported (default is to cast large integers as floats)." type="int" variable="$options">
            <type by_reference="false">int</type>
          </tag>
          <tag line="534" name="return" description="The `json_decode()` results." type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="550">
          <name>$assoc</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="550">
          <name>$depth</name>
          <default>512</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="568" package="Default">
        <name>getHeader</name>
        <docblock>
          <description>Retrieves an **unfiltered** value by key from the `$header` property,
or an alternate default value if that key does not exist.</description>
          <long-description/>
          <tag line="555" name="param" description="The $http key to retrieve the value of." type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="555" name="param" description="The value to return if the key does not exist." type="string" variable="$alt">
            <type by_reference="false">string</type>
          </tag>
          <tag line="555" name="return" description="The value of $header[$key], or the alternate default value." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="568">
          <name>$key</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="568">
          <name>$alt</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="587" package="Default">
        <name>parseAccept</name>
        <docblock>
          <description>Parse an HTTP `Accept*` header and sort by the quality factor, the
highest being first in the returned array. The returned data is
unfiltered.</description>
          <long-description/>
          <tag line="574" name="param" description="The name of the accept header to parse." type="string" variable="$header">
            <type by_reference="false">string</type>
          </tag>
          <tag line="574" name="param" description="The value to return if the key does not exist." type="mixed" variable="$alt">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="574" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="587">
          <name>$accept</name>
          <default/>
          <type/>
        </argument>
        <argument line="587">
          <name>$alt</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="622" package="Default">
        <name>getAccept</name>
        <docblock>
          <description>Gets an `Accept` header.  If you want the content-type, ask for
`'type'`; otherwise, if you want (e.g.) `'Accept-Language'`, ask for
`'language'`.</description>
          <long-description/>
          <tag line="608" name="param" description="The `$accept` key to return; if null, returns the entire `$accept` property." type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="608" name="param" description="The value to return if the key does not exist." type="mixed" variable="$alt">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="608" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="622">
          <name>$key</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="622">
          <name>$alt</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="665" package="Default">
        <name>setHeader</name>
        <docblock>
          <description>Set the "fake" `$header` property.</description>
          <long-description/>
          <tag line="658" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="703" package="Default">
        <name>httpMethodOverride</name>
        <docblock>
          <description>Overrides the REQUEST_METHOD with X-HTTP-Method-Override header or
$_POST value.</description>
          <long-description/>
          <tag line="695" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="740" package="Default">
        <name>rebuildFiles</name>
        <docblock>
          <description>Recursive method to rebuild $_FILES structure to be more like $_POST.</description>
          <long-description/>
          <tag line="727" name="param" description="The source $_FILES array, perhaps from a sub- element of that array/" type="array" variable="$src">
            <type by_reference="false">array</type>
          </tag>
          <tag line="727" name="param" description="&amp;$tgt Where we will store the restructured data when we find it." type="array" variable="$tgt">
            <type by_reference="false">array</type>
          </tag>
          <tag line="727" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="740">
          <name>$src</name>
          <default/>
          <type/>
        </argument>
        <argument line="740">
          <name>$tgt</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="795" package="Default">
        <name>getValue</name>
        <docblock>
          <description>Common method to get a property value and return it.</description>
          <long-description/>
          <tag line="779" name="param" description="The property variable to fetch from: get, post, etc." type="string" variable="$var">
            <type by_reference="false">string</type>
          </tag>
          <tag line="779" name="param" description="The array key, if any, to get the value of." type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="779" name="param" description="The alternative default value to return if the requested key does not exist." type="string" variable="$alt">
            <type by_reference="false">string</type>
          </tag>
          <tag line="779" name="return" description="The requested value, or the alternative default value." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="795">
          <name>$var</name>
          <default/>
          <type/>
        </argument>
        <argument line="795">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="795">
          <name>$alt</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Aura/Web/Exception/Context.php" hash="e0f9cf78a42511379fdcf190e4bc5fe1" package="Default">
    <class final="false" abstract="false" line="18" namespace="Aura\Web\Exception" package="Aura\Web">
      <name>Context</name>
      <extends>\Aura\Web\Exception</extends>
      <full_name>\Aura\Web\Exception\Context</full_name>
      <docblock>
        <description>Context Exception</description>
        <long-description/>
        <tag line="11" name="package" description="Aura.Web"/>
      </docblock>
    </class>
  </file>
  <file path="Aura/Web/Exception/NoMethodForAction.php" hash="3efd58cf98066dd47bc379011e08e21d" package="Default">
    <class final="false" abstract="false" line="18" namespace="Aura\Web\Exception" package="Aura\Web">
      <name>NoMethodForAction</name>
      <extends>\Aura\Web\Exception</extends>
      <full_name>\Aura\Web\Exception\NoMethodForAction</full_name>
      <docblock>
        <description>No method for action exception</description>
        <long-description/>
        <tag line="11" name="package" description="Aura.Web"/>
      </docblock>
    </class>
  </file>
  <file path="Aura/Web/Exception.php" hash="436782b65850a2b76669e55a6a1bda60" package="Default">
    <class final="false" abstract="false" line="18" namespace="Aura\Web" package="Aura\Web">
      <name>Exception</name>
      <extends>\Exception</extends>
      <full_name>\Aura\Web\Exception</full_name>
      <docblock>
        <description>Package-specific exception.</description>
        <long-description/>
        <tag line="11" name="package" description="Aura.Web"/>
      </docblock>
    </class>
  </file>
  <file path="Aura/Web/Response.php" hash="ec627ab37fce70ec5be29c456fca4438" package="Default">
    <parse_markers>
      <notice line="331">Argument $replace is missing from the function Docblock</notice>
      <notice line="594">Name of argument $value does not match with function Docblock</notice>
    </parse_markers>
    <class final="false" abstract="false" line="19" namespace="Aura\Web" package="Aura\Web">
      <name>Response</name>
      <extends/>
      <full_name>\Aura\Web\Response</full_name>
      <docblock>
        <description>Retains information about the controller results for transfer to an actual
HTTP response object.</description>
        <long-description/>
        <tag line="11" name="package" description="Aura.Web"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="45" package="Default">
        <name>$cache</name>
        <default>null</default>
        <docblock>
          <description>Should the response disable browser caching?</description>
          <long-description>&lt;p&gt;When &lt;code&gt;false&lt;/code&gt;, the &lt;code&gt;getHeaders()&lt;/code&gt; method will set these headers in its
return value (note that they are not added to &lt;code&gt;$headers&lt;/code&gt; directly):&lt;/p&gt;

&lt;p&gt;{{code:
    Pragma: no-cache
    Cache-Control: no-store, no-cache, must-revalidate
    Cache-Control: post-check=0, pre-check=0
    Expires: 1
}}&lt;/p&gt;

&lt;p&gt;When true or null, the &lt;code&gt;getHeaders()&lt;/code&gt; method will make no changes to
the existing headers.&lt;/p&gt;</long-description>
          <tag line="21" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="21" name="see" description="\Aura\Web\setCache()" refers="\Aura\Web\setCache()"/>
          <tag line="21" name="see" description="\Aura\Web\setRedirectAfterPost()" refers="\Aura\Web\setRedirectAfterPost()"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="54" package="Default">
        <name>$content</name>
        <default>null</default>
        <docblock>
          <description>The response body content.</description>
          <long-description/>
          <tag line="47" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="63" package="Default">
        <name>$content_type</name>
        <default>null</default>
        <docblock>
          <description>The Content-Type of the response.</description>
          <long-description/>
          <tag line="56" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="72" package="Default">
        <name>$cookies</name>
        <default>[]</default>
        <docblock>
          <description>The response cookies.</description>
          <long-description/>
          <tag line="65" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="81" package="Default">
        <name>$cookies_httponly</name>
        <default>true</default>
        <docblock>
          <description>Whether or not cookies should default to being sent by HTTP only.</description>
          <long-description/>
          <tag line="74" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="90" package="Default">
        <name>$headers</name>
        <default>[]</default>
        <docblock>
          <description>The response headers (less the cookies).</description>
          <long-description/>
          <tag line="83" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="99" package="Default">
        <name>$redirect</name>
        <default>''</default>
        <docblock>
          <description>Redirect to this location.</description>
          <long-description/>
          <tag line="92" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="108" package="Default">
        <name>$status_code</name>
        <default>200</default>
        <docblock>
          <description>The response status code.</description>
          <long-description/>
          <tag line="101" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="117" package="Default">
        <name>$status_text</name>
        <default>null</default>
        <docblock>
          <description>The response status text.</description>
          <long-description/>
          <tag line="110" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="126" package="Default">
        <name>$version</name>
        <default>'1.1'</default>
        <docblock>
          <description>The HTTP version to send as.</description>
          <long-description/>
          <tag line="119" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="146" package="Default">
        <name>setCache</name>
        <docblock>
          <description>Should the response disable HTTP caching?</description>
          <long-description>&lt;p&gt;When &lt;code&gt;false&lt;/code&gt;, the &lt;code&gt;getHeaders()&lt;/code&gt; method will add these headers:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Pragma: no-cache
Cache-Control: no-store, no-cache, must-revalidate
Cache-Control: post-check=0, pre-check=0
Expires: 1
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="128" name="param" description="When true, disable browser caching." type="bool" variable="$flag">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="128" name="see" description="\Aura\Web\redirectPost()" refers="\Aura\Web\redirectPost()"/>
          <tag line="128" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="146">
          <name>$flag</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="162" package="Default">
        <name>getCache</name>
        <docblock>
          <description>Is caching turned off?</description>
          <long-description/>
          <tag line="155" name="return" description="Note that this is a ternary: true, false, or null." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="176" package="Default">
        <name>setContent</name>
        <docblock>
          <description>Sets the content of the response.</description>
          <long-description/>
          <tag line="167" name="param" description="The body content of the response." type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="167" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="176">
          <name>$content</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="188" package="Default">
        <name>getContent</name>
        <docblock>
          <description>Gets the content of the response.</description>
          <long-description/>
          <tag line="181" name="return" description="The body content of the response." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="204" package="Default">
        <name>setContentType</name>
        <docblock>
          <description>Sets the Content-Type of the response.</description>
          <long-description/>
          <tag line="193" name="param" description="The Content-Type of the response." type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="193" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="193" name="see" description="\Aura\Web\negotiateContentType()" refers="\Aura\Web\negotiateContentType()"/>
        </docblock>
        <argument line="204">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="216" package="Default">
        <name>getContentType</name>
        <docblock>
          <description>Gets the Content-Type of the response.</description>
          <long-description/>
          <tag line="209" name="return" description="The Content-Type of the response." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="247" package="Default">
        <name>setCookie</name>
        <docblock>
          <description>Sets a cookie value in `$cookies`.</description>
          <long-description/>
          <tag line="221" name="param" description="The name of the cookie." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="221" name="param" description="The value of the cookie." type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="221" name="param" description="The Unix timestamp after which the cookie expires. If non-numeric, the method uses strtotime() on the value." type="int|string" variable="$expire">
            <type by_reference="false">int</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="221" name="param" description="The path on the server in which the cookie will be available on." type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="221" name="param" description="The domain that the cookie is available on." type="string" variable="$domain">
            <type by_reference="false">string</type>
          </tag>
          <tag line="221" name="param" description="Indicates that the cookie should only be transmitted over a secure HTTPS connection." type="bool" variable="$secure">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="221" name="param" description="When true, the cookie will be made accessible only through the HTTP protocol. This means that the cookie won't be accessible by scripting languages, such as JavaScript." type="bool" variable="$httponly">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="221" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="247">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="247">
          <name>$value</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="247">
          <name>$expire</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="248">
          <name>$path</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="248">
          <name>$domain</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="248">
          <name>$secure</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="248">
          <name>$httponly</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="269" package="Default">
        <name>getCookie</name>
        <docblock>
          <description>Gets one cookie for the response.</description>
          <long-description/>
          <tag line="260" name="param" description="The cookie name." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="260" name="return" description="A cookie descriptor." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="269">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="296" package="Default">
        <name>getCookies</name>
        <docblock>
          <description>Gets all cookies for the response.</description>
          <long-description/>
          <tag line="289" name="return" description="A sequential array of cookie descriptors." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="315" package="Default">
        <name>setCookiesHttponly</name>
        <docblock>
          <description>By default, should cookies be sent by HTTP only?</description>
          <long-description/>
          <tag line="305" name="param" description="True to send by HTTP only, false to send by any method." type="bool" variable="$flag">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="305" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="315">
          <name>$flag</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="331" package="Default">
        <name>setHeader</name>
        <docblock>
          <description>Sets a header value in `$headers`.</description>
          <long-description/>
          <tag line="320" name="param" description="The header label." type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="320" name="param" description="The value for the header." type="string" variable="$val">
            <type by_reference="false">string</type>
          </tag>
          <tag line="320" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="331">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="331">
          <name>$val</name>
          <default/>
          <type/>
        </argument>
        <argument line="331">
          <name>$replace</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="349" package="Default">
        <name>addHeader</name>
        <docblock>
          <description>Adds to a header value in $this-&gt;headers.</description>
          <long-description/>
          <tag line="338" name="param" description="The header label, such as &quot;Content-Type&quot;." type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="338" name="param" description="The value for the header." type="string" variable="$val">
            <type by_reference="false">string</type>
          </tag>
          <tag line="338" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="349">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="349">
          <name>$val</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="368" package="Default">
        <name>getHeader</name>
        <docblock>
          <description>Returns the value of a single header.</description>
          <long-description/>
          <tag line="357" name="param" description="The header name." type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="357" name="return" description="A string if the header has only one value, or an array if the header has multiple values, or null if the header does not exist." type="string|array">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="368">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="386" package="Default">
        <name>getHeaders</name>
        <docblock>
          <description>Returns the array of all headers to be sent with the response.</description>
          <long-description/>
          <tag line="377" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="377" name="todo" description="Add case for cache === true (hm, or cache === array)."/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="425" package="Default">
        <name>setRedirect</name>
        <docblock>
          <description>Set a location that the response should redirect to, along with a
a status code and status text.</description>
          <long-description/>
          <tag line="410" name="param" description="The URI to redirect to." type="string" variable="$uri">
            <type by_reference="false">string</type>
          </tag>
          <tag line="410" name="param" description="The HTTP status code to redirect with; default is `302`." type="int" variable="$code">
            <type by_reference="false">int</type>
          </tag>
          <tag line="410" name="param" description="The HTTP status text; default is `'Found'`." type="string" variable="$text">
            <type by_reference="false">string</type>
          </tag>
          <tag line="410" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="425">
          <name>$uri</name>
          <default/>
          <type/>
        </argument>
        <argument line="425">
          <name>$code</name>
          <default>'302'</default>
          <type/>
        </argument>
        <argument line="425">
          <name>$text</name>
          <default>'Found'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="447" package="Default">
        <name>setRedirectAfterPost</name>
        <docblock>
          <description>Set a location that the response should redirect to, along with a
a status code and status text, *and* sets caching to false.</description>
          <long-description/>
          <tag line="432" name="param" description="The URI to redirect to." type="string" variable="$uri">
            <type by_reference="false">string</type>
          </tag>
          <tag line="432" name="param" description="The HTTP status code to redirect with; default is `303`." type="int|string" variable="$code">
            <type by_reference="false">int</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="432" name="param" description="The HTTP status text; default is `'See Other'`." type="string" variable="$text">
            <type by_reference="false">string</type>
          </tag>
          <tag line="432" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="447">
          <name>$uri</name>
          <default/>
          <type/>
        </argument>
        <argument line="447">
          <name>$code</name>
          <default>'303'</default>
          <type/>
        </argument>
        <argument line="447">
          <name>$text</name>
          <default>'See Other'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="460" package="Default">
        <name>isRedirect</name>
        <docblock>
          <description>Is the response set to issue a redirect?</description>
          <long-description/>
          <tag line="453" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="472" package="Default">
        <name>getRedirect</name>
        <docblock>
          <description>Returns the redirect location, if any.</description>
          <long-description/>
          <tag line="465" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="486" package="Default">
        <name>setStatusCode</name>
        <docblock>
          <description>Sets the HTTP status code to for the response.</description>
          <long-description>&lt;p&gt;Automatically resets the status text to null.&lt;/p&gt;</long-description>
          <tag line="477" name="param" description="An HTTP status code, such as 200, 302, 404, etc." type="int" variable="$code">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="486">
          <name>$code</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="504" package="Default">
        <name>getStatusCode</name>
        <docblock>
          <description>Returns the HTTP status code for the response.</description>
          <long-description/>
          <tag line="497" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="518" package="Default">
        <name>setStatusText</name>
        <docblock>
          <description>Sets the HTTP status text for the response.</description>
          <long-description/>
          <tag line="509" name="param" description="The status text." type="string" variable="$text">
            <type by_reference="false">string</type>
          </tag>
          <tag line="509" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="518">
          <name>$text</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="532" package="Default">
        <name>getStatusText</name>
        <docblock>
          <description>Returns the HTTP status text for the response.</description>
          <long-description/>
          <tag line="525" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="546" package="Default">
        <name>setVersion</name>
        <docblock>
          <description>Sets the HTTP version for the response to '1.0' or '1.1'.</description>
          <long-description/>
          <tag line="537" name="param" description="The HTTP version to use for this response." type="string" variable="$version">
            <type by_reference="false">string</type>
          </tag>
          <tag line="537" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="546">
          <name>$version</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="563" package="Default">
        <name>getVersion</name>
        <docblock>
          <description>Returns the HTTP version for the response.</description>
          <long-description/>
          <tag line="556" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="577" package="Default">
        <name>headerLabel</name>
        <docblock>
          <description>Normalizes and sanitizes a header label.</description>
          <long-description/>
          <tag line="568" name="param" description="The header label to be sanitized." type="string" variable="$label">
            <type by_reference="false">string</type>
          </tag>
          <tag line="568" name="return" description="The sanitized header label." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="577">
          <name>$label</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="594" package="Default">
        <name>headerValue</name>
        <docblock>
          <description>Sanitizes a header value.</description>
          <long-description/>
          <tag line="585" name="param" description="The header value to be sanitized." type="string" variable="$label">
            <type by_reference="false">string</type>
          </tag>
          <tag line="585" name="return" description="The sanitized header value." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="594">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <package name="Aura">
    <package name="Web"/>
  </package>
  <package name="Default"/>
  <namespace name="Aura">
    <namespace name="Web">
      <namespace name="Exception"/>
    </namespace>
  </namespace>
  <marker>todo</marker>
  <marker>fixme</marker>
</project>
